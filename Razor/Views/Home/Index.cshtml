@using System.Globalization;

@{
    ViewData["Title"] = "Razor";
}

<div class="text-center">
    <h1 class="display-4">Esercizi Razor</h1>
  
</div>

@{
    string name = "Tommaso";
    string surname = "Paglia";
}
<p>
    1. Dichiarare una variabile valorizzandola con il nostro nome.
    Dichiarare un'altra variabile valorizzandola con il nostro cognome.
    Stampare il nostro nome e cognome all'interno di un tag h2.
    <h2>@name @surname</h2>
 </p>

@{
    int sumFunction(int n)
    {
        int result = 0;
        for(int i=1; i<=n; i++)
        {
            result += i; 

        }
        return result;
    }

}
<p>
    2. Creare una funzione che stampa la somma dei numeri che vanno da 1 a n (con n passato come parametro - n incluso)
    Stampare dentro uno span il risultato:
</p>
    <p>
        <span>@sumFunction(3)</span>
    </p>

@{
    string sentenceToCheckLetter = "nel mezzo del cammin di nostra vita";
    int letterOccurence = sentenceToCheckLetter.Count(letter => letter == 'a');
    
}
<p>3. Contare quante volte la lettera a è presente nalla frase "nel mezzo del cammin di nostra vita" e stampare questo valore in pagina:</p>
<p>
    @letterOccurence
</p>

@{
    List<int> numbers = new();
    List<int> numbersToPrint = new();
    for(int i = 0; i < 20; i++){
        Random random = new Random();
        int numberToAdd = random.Next(1, 91);
        numbers.Add(numberToAdd);
        if(numberToAdd>20 && numberToAdd < 70)
        {
            int numberToPrint = numberToAdd;
            numbersToPrint.Add(numberToPrint);
        }
    }
}

<p>
 4. Creare una Lista di int di 20 numeri interi (generati random da 1 a 90, 1 e 90 inclusi) e mostrare in pagina solo i numeri compresi tra 20 e 70
        <ul>
            @foreach(int number in numbersToPrint)
            {
                <li>@number</li>
            }
        </ul>
</p>
<p>5. Stampare in pagina la data e l'ora attuale (usando la classe DateTime) con il formato anno-mese-giorno ore:minuti:secondi</p>
<p>@DateTime.Now.ToString("dd/MM/yyyy HH:mm:ss")</p>

<p>
    6. Partendo dalla data di oggi (usando la classe DateTime) stampare in pagina: <br />
    a. la data di 7 giorni fa: @DateTime.Today.AddDays(-7).ToShortDateString()<br />
    @{
        string day = DateTime.Today.ToString("dddd");
        string formattedDay = day.Substring(0, 1).ToUpper() + day.Substring(1);
    }
    b. che giorno della settimana è oggi (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...): @formattedDay <br />
    @{
        string nextYearDay = DateTime.Today.AddYears(1).ToString("dddd");
        string nextYearFormattedDay = nextYearDay.Substring(0, 1).ToUpper() + nextYearDay.Substring(1);

    }

    c. che giorno della settimana sarà nello stesso giorno e mese di oggi ma tra un anno (il risultato dovrà essere il nome del giorno (Lunedì, Martedì, ...): @nextYearFormattedDay
</p>


   